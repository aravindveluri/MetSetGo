name: Deploy

# triggers
on:
  # opening a pr to master or develop branches
  pull_request:
    branches:
      - develop
      - master
  # code pushed to master or develop branch
  push:
    branches:
      - master
      - develop
      - deploy

jobs:
#   app-health-job: # health check for testing
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: github-actions
#         ports:
#           - 5432:5432
#         options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
        
#       - name: Cache dependency # for faster builds
#         uses: actions/cache@v2
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-
            
#       - name: Setup python environment # setting python environment to 3.x
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.8.3'
          
#       - name: Check Python version # Check if python version is installed
#         run: python --version
        
#       - name: Install requirements # install requirements
#         run: pip install -r metsetgo/requirements.txt
        
#       - name: Run Migrations # run migrations to populate db tables
#         run: python metsetgo/manage.py migrate
        
#       - name: Run Tests # running tests
#         working-directory: ./metsetgo
#         run: python manage.py test

  push-dockerhub:
#     needs: app-health-job
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Pull base images
      run: docker-compose pull

    - name: Build images using docker compose
      run: docker-compose build
      
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Tag docker images
      run: | 
        docker tag metsetgo_backend:latest aravindv178/metsetgo:backend
        docker tag metsetgo_frontend:latest aravindv178/metsetgo:frontend
        docker tag postgres:12.9 aravindv178/metsetgo:db
        docker tag metsetgo_nginx:latest aravindv178/metsetgo:nginx
    
    - name: Push to DockerHub
      run: |
        docker push aravindv178/metsetgo:backend 
        docker push aravindv178/metsetgo:frontend 
        docker push aravindv178/metsetgo:db
        docker push aravindv178/metsetgo:nginx

  deploy:
    needs: push-dockerhub
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run ansible deployment
      uses: ./.github/actions/ansible    
    
    env:
       AZURE_SSH_USER: ${{ secrets.AZURE_SSH_USER }}
       AZURE_SSH_PASSWORD: ${{ secrets.AZURE_SSH_PASSWORD }}  
      
      
